[ ca ]
default_ca = CA_default

[ CA_default ]
dir               = {{ ssl_basedir }}
certs             = {{ ssl_certs_dir }}
#crl_dir           = $dir/crl
new_certs_dir     = {{ ssl_new_certs_dir }}
database          = {{ ssl_ca_database }}
serial            = {{ ssl_ca_serial }}
#RANDFILE          = $dir/private/.rand

# The root key and root certificate.
private_key       = {{ ssl_ca_key }}
certificate       = {{ ssl_ca_cert }}

# For certificate revocation lists.
crlnumber         = $dir/crlnumber
crl               = $dir/crl/ca.crl.pem
crl_extensions    = crl_ext
default_crl_days  = 30

# SHA-1 is deprecated, so use SHA-2 instead.
default_md        = sha256

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 375
preserve          = no
policy            = default_policy

[ default_policy ]
countryName             = supplied
stateOrProvinceName     = supplied
localityName            = supplied
organizationName        = supplied
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = supplied

[ req ]
default_bits        = 2048
distinguished_name  = req_distinguished_name
string_mask         = utf8only
utf8                = yes
x509_extensions     = v3_ca

[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName                     = Country Name (2 letter code)
countryName_default             = {{ ssl_country }}
stateOrProvinceName             = State or Province Name
stateOrProvinceName_default     = {{ ssl_state }}
localityName                    = Locality Name
localityName_default            = {{ ssl_city }}
0.organizationName              = Organization Name
0.organizationName_default      = {{ ssl_organization }}
organizationalUnitName          = Organizational Unit Name
organizationalUnitName_default  = {{ ssl_organizational_unit }}
emailAddress                    = Email Address
emailAddress_default            = {{ ssl_email_address }}
commonName                      = Common Name

[ v3_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier=keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning
